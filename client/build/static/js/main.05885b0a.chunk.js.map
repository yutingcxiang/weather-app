{"version":3,"sources":["components/Weather.js","components/Today.js","components/Error.js","components/LocationForm.js","containers/WeatherContainer.js","App.js","index.js"],"names":["Weather","props","capitalizedDesc","description","charAt","toUpperCase","slice","temp","Math","round","temperature","react_default","a","createElement","city","high","low","humidity","wind","Today","date","Date","today","getMonth","getDate","getFullYear","weekday","getDay","Error","className","LocationForm","onSubmit","handleSubmit","type","value","query","onChange","handleChange","placeholder","WeatherContainer","state","weather","error","getWeather","input","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","res","Object","keys","length","_this","setState","event","target","preventDefault","_this2","this","interval","setInterval","clearInterval","components_Today","components_LocationForm","components_Error","components_Weather","Component","App","containers_WeatherContainer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.05885b0a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Weather = (props) => {\n  let capitalizedDesc = props.description.charAt(0).toUpperCase() + props.description.slice(1);\n  let temp = Math.round(props.temperature);\n\n  return(\n    <div>\n      <h1>{props.city}</h1>\n      <h2>{temp}°F</h2>\n      <h3>{capitalizedDesc}</h3>\n      <p>High: {props.high}°F</p>\n      <p>Low: {props.low}°F</p>\n      <p>Humidity: {props.humidity}%</p>\n      <p>Wind Speed: {props.wind}mps</p>\n    </div>\n  )\n}\n\nexport default Weather;\n","import React from 'react';\n\nconst Today = (props) => {\n  //Format today\n  let date = new Date();\n  let today = (date.getMonth() + 1) + '/' + date.getDate() + '/' +  date.getFullYear();\n\n  //Format weekday\n  let daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  let weekday = daysOfWeek[(new Date(today)).getDay()]\n\n  return(\n    <div>\n      <h1>{weekday} {today}</h1>\n    </div>\n  )\n}\n\nexport default Today;\n","import React from 'react';\n\nconst Error = () => {\n  return(\n    <div className=\"error\">\n      <br/>\n      <p className=\"highlight\">Please enter a valid city</p>\n      <p className=\"highlight\">for current weather.</p>\n    </div>\n  )\n}\n\nexport default Error;\n","import React from 'react';\n\nconst LocationForm = (props) => {\n\n  return(\n    <div>\n      <form onSubmit={props.handleSubmit}>\n        <input\n          type=\"text\"\n          value={props.query}\n          onChange={props.handleChange}\n          placeholder=\"Enter City\"\n        />\n        <button type=\"submit\"></button>\n      </form>\n    </div>\n  )\n}\n\nexport default LocationForm;\n","import React, { Component } from 'react';\nimport Weather from '../components/Weather.js';\nimport Today from '../components/Today.js';\nimport Error from '../components/Error.js';\nimport LocationForm from '../components/LocationForm.js';\n\nclass WeatherContainer extends Component {\n  state = {\n    weather: null,\n    city: '',\n    error: false,\n    query: '',\n  }\n\n  componentDidMount() {\n    // Fetch updated weather every 15 minutes\n    this.interval = setInterval(() =>\n      this.getWeather(this.state.weather), 900000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getWeather = (input) => {\n    return fetch('/weather', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ input }),\n    })\n    .then(response => response.json())\n    .then(res => {\n      //If invalid city, an empty object is returned\n      if (Object.keys(res).length !== 0) {\n        // Successful query handling\n        this.setState({\n          weather: res,\n          city: res[\"name\"],\n          error: false,\n          query: '',\n       })} else {\n         // Error query handling\n         this.setState({\n           weather: null,\n           city: '',\n           error: true,\n           query: '',\n         })\n       }\n     })\n  };\n\n  handleChange = event => {\n    this.setState({\n      query: event.target.value\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.getWeather(this.state.query)\n    this.setState({\n      query: '',\n    })\n  };\n\n  render() {\n    return(\n      <div className=\"centered\">\n        <Today /><br/>\n        <LocationForm handleSubmit={this.handleSubmit} handleChange={this.handleChange} query={this.state.query}/>\n        {this.state.error && <Error />}<br/>\n        {this.state.weather && <Weather\n          city={this.state.weather[\"name\"]}\n          temperature={this.state.weather[\"main\"][\"temp\"]}\n          description={this.state.weather[\"weather\"][0][\"description\"]}\n          humidity={this.state.weather[\"main\"][\"humidity\"]}\n          low={this.state.weather[\"main\"][\"temp_min\"]}\n          high={this.state.weather[\"main\"][\"temp_max\"]}\n          wind={this.state.weather[\"wind\"][\"speed\"]} />}\n      </div>\n    )\n  }\n}\n\nexport default WeatherContainer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport WeatherContainer from './containers/WeatherContainer.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App overlay\">\n        <WeatherContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}