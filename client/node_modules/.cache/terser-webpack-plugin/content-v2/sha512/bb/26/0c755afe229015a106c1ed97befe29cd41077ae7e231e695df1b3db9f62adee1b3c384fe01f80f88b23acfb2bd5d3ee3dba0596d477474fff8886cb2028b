{"map":"{\"version\":3,\"sources\":[\"/Users/yutingcxiang/weather-app/weather-app/client/src/components/Weather.js\",\"/Users/yutingcxiang/weather-app/weather-app/client/src/components/Today.js\",\"/Users/yutingcxiang/weather-app/weather-app/client/src/components/Error.js\",\"/Users/yutingcxiang/weather-app/weather-app/client/src/components/LocationForm.js\",\"/Users/yutingcxiang/weather-app/weather-app/client/src/containers/WeatherContainer.js\",\"/Users/yutingcxiang/weather-app/weather-app/client/src/App.js\",\"/Users/yutingcxiang/weather-app/weather-app/client/src/serviceWorker.js\",\"/Users/yutingcxiang/weather-app/weather-app/client/src/index.js\"],\"names\":[\"Weather\",\"props\",\"capitalizedDesc\",\"description\",\"charAt\",\"toUpperCase\",\"slice\",\"temp\",\"Math\",\"round\",\"temperature\",\"react_default\",\"a\",\"createElement\",\"city\",\"high\",\"low\",\"humidity\",\"wind\",\"Today\",\"date\",\"Date\",\"today\",\"getMonth\",\"getDate\",\"getFullYear\",\"weekday\",\"getDay\",\"Error\",\"className\",\"LocationForm\",\"onSubmit\",\"handleSubmit\",\"type\",\"value\",\"query\",\"onChange\",\"handleChange\",\"placeholder\",\"WeatherContainer\",\"state\",\"weather\",\"error\",\"getWeather\",\"input\",\"fetch\",\"method\",\"headers\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"then\",\"response\",\"json\",\"res\",\"Object\",\"keys\",\"length\",\"_this\",\"setState\",\"event\",\"target\",\"preventDefault\",\"_this2\",\"this\",\"interval\",\"setInterval\",\"clearInterval\",\"components_Today\",\"components_LocationForm\",\"components_Error\",\"components_Weather\",\"Component\",\"App\",\"containers_WeatherContainer\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst Weather = (props) => {\\n  let capitalizedDesc = props.description.charAt(0).toUpperCase() + props.description.slice(1);\\n  let temp = Math.round(props.temperature);\\n\\n  return(\\n    <div>\\n      <h1>{props.city}</h1>\\n      <h2>{temp}°F</h2>\\n      <h3>{capitalizedDesc}</h3>\\n      <p>High: {props.high}°F</p>\\n      <p>Low: {props.low}°F</p>\\n      <p>Humidity: {props.humidity}%</p>\\n      <p>Wind Speed: {props.wind}mps</p>\\n    </div>\\n  )\\n}\\n\\nexport default Weather;\\n\",\"import React from 'react';\\n\\nconst Today = (props) => {\\n  //Format today\\n  let date = new Date();\\n  let today = (date.getMonth() + 1) + '/' + date.getDate() + '/' +  date.getFullYear();\\n\\n  //Format weekday\\n  let daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\\n  let weekday = daysOfWeek[(new Date(today)).getDay()]\\n\\n  return(\\n    <div>\\n      <h1>{weekday} {today}</h1>\\n    </div>\\n  )\\n}\\n\\nexport default Today;\\n\",\"import React from 'react';\\n\\nconst Error = () => {\\n  return(\\n    <div className=\\\"error\\\">\\n      <br/>\\n      <p className=\\\"highlight\\\">Please enter a valid city</p>\\n      <p className=\\\"highlight\\\">for current weather.</p>\\n    </div>\\n  )\\n}\\n\\nexport default Error;\\n\",\"import React from 'react';\\n\\nconst LocationForm = (props) => {\\n\\n  return(\\n    <div>\\n      <form onSubmit={props.handleSubmit}>\\n        <input\\n          type=\\\"text\\\"\\n          value={props.query}\\n          onChange={props.handleChange}\\n          placeholder=\\\"Enter City\\\"\\n        />\\n        <button type=\\\"submit\\\"></button>\\n      </form>\\n    </div>\\n  )\\n}\\n\\nexport default LocationForm;\\n\",\"import React, { Component } from 'react';\\nimport Weather from '../components/Weather.js';\\nimport Today from '../components/Today.js';\\nimport Error from '../components/Error.js';\\nimport LocationForm from '../components/LocationForm.js';\\n\\nclass WeatherContainer extends Component {\\n  state = {\\n    weather: null,\\n    city: '',\\n    error: false,\\n    query: '',\\n  }\\n\\n  componentDidMount() {\\n    // Fetch updated weather every 15 minutes\\n    this.interval = setInterval(() =>\\n      this.getWeather(this.state.weather), 900000)\\n  }\\n\\n  componentWillUnmount() {\\n    clearInterval(this.interval);\\n  }\\n\\n  getWeather = (input) => {\\n    return fetch('/weather', {\\n      method: 'POST',\\n      headers: {\\n        'Content-Type': 'application/json',\\n      },\\n      body: JSON.stringify({ input }),\\n    })\\n    .then(response => response.json())\\n    .then(res => {\\n      //If invalid city, an empty object is returned\\n      if (Object.keys(res).length !== 0) {\\n        // Successful query handling\\n        this.setState({\\n          weather: res,\\n          city: res[\\\"name\\\"],\\n          error: false,\\n          query: '',\\n       })} else {\\n         // Error query handling\\n         this.setState({\\n           weather: null,\\n           city: '',\\n           error: true,\\n           query: '',\\n         })\\n       }\\n     })\\n  };\\n\\n  handleChange = event => {\\n    this.setState({\\n      query: event.target.value\\n    })\\n  }\\n\\n  handleSubmit = event => {\\n    event.preventDefault();\\n    this.getWeather(this.state.query)\\n    this.setState({\\n      query: '',\\n    })\\n  };\\n\\n  render() {\\n    return(\\n      <div className=\\\"centered\\\">\\n        <Today /><br/>\\n        <LocationForm handleSubmit={this.handleSubmit} handleChange={this.handleChange} query={this.state.query}/>\\n        {this.state.error && <Error />}<br/>\\n        {this.state.weather && <Weather\\n          city={this.state.weather[\\\"name\\\"]}\\n          temperature={this.state.weather[\\\"main\\\"][\\\"temp\\\"]}\\n          description={this.state.weather[\\\"weather\\\"][0][\\\"description\\\"]}\\n          humidity={this.state.weather[\\\"main\\\"][\\\"humidity\\\"]}\\n          low={this.state.weather[\\\"main\\\"][\\\"temp_min\\\"]}\\n          high={this.state.weather[\\\"main\\\"][\\\"temp_max\\\"]}\\n          wind={this.state.weather[\\\"wind\\\"][\\\"speed\\\"]} />}\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default WeatherContainer;\\n\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport WeatherContainer from './containers/WeatherContainer.js';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App overlay\\\">\\n        <WeatherContainer />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,n){},16:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),i=n(7),l=n.n(i),c=n(1),u=n(2),o=n(4),h=n(3),s=n(5),m=(n(14),function(e){var t=e.description.charAt(0).toUpperCase()+e.description.slice(1),n=Math.round(e.temperature);return r.a.createElement(\"div\",null,r.a.createElement(\"h1\",null,e.city),r.a.createElement(\"h2\",null,n,\"\\xb0F\"),r.a.createElement(\"h3\",null,t),r.a.createElement(\"p\",null,\"High: \",e.high,\"\\xb0F\"),r.a.createElement(\"p\",null,\"Low: \",e.low,\"\\xb0F\"),r.a.createElement(\"p\",null,\"Humidity: \",e.humidity,\"%\"),r.a.createElement(\"p\",null,\"Wind Speed: \",e.wind,\"mps\"))}),d=function(e){var t=new Date,n=t.getMonth()+1+\"/\"+t.getDate()+\"/\"+t.getFullYear(),a=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"][new Date(n).getDay()];return r.a.createElement(\"div\",null,r.a.createElement(\"h1\",null,a,\" \",n))},p=function(){return r.a.createElement(\"div\",{className:\"error\"},r.a.createElement(\"br\",null),r.a.createElement(\"p\",{className:\"highlight\"},\"Please enter a valid city\"),r.a.createElement(\"p\",{className:\"highlight\"},\"for current weather.\"))},y=function(e){return r.a.createElement(\"div\",null,r.a.createElement(\"form\",{onSubmit:e.handleSubmit},r.a.createElement(\"input\",{type:\"text\",value:e.query,onChange:e.handleChange,placeholder:\"Enter City\"}),r.a.createElement(\"button\",{type:\"submit\"})))},w=function(e){function t(){var e,n;Object(c.a)(this,t);for(var a=arguments.length,r=new Array(a),i=0;i<a;i++)r[i]=arguments[i];return(n=Object(o.a)(this,(e=Object(h.a)(t)).call.apply(e,[this].concat(r)))).state={weather:null,city:\"\",error:!1,query:\"\"},n.getWeather=function(e){return fetch(\"/weather\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({input:e})}).then(function(e){return e.json()}).then(function(e){0!==Object.keys(e).length?n.setState({weather:e,city:e.name,error:!1,query:\"\"}):n.setState({weather:null,city:\"\",error:!0,query:\"\"})})},n.handleChange=function(e){n.setState({query:e.target.value})},n.handleSubmit=function(e){e.preventDefault(),n.getWeather(n.state.query),n.setState({query:\"\"})},n}return Object(s.a)(t,e),Object(u.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;this.interval=setInterval(function(){return e.getWeather(e.state.weather)},9e5)}},{key:\"componentWillUnmount\",value:function(){clearInterval(this.interval)}},{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"centered\"},r.a.createElement(d,null),r.a.createElement(\"br\",null),r.a.createElement(y,{handleSubmit:this.handleSubmit,handleChange:this.handleChange,query:this.state.query}),this.state.error&&r.a.createElement(p,null),r.a.createElement(\"br\",null),this.state.weather&&r.a.createElement(m,{city:this.state.weather.name,temperature:this.state.weather.main.temp,description:this.state.weather.weather[0].description,humidity:this.state.weather.main.humidity,low:this.state.weather.main.temp_min,high:this.state.weather.main.temp_max,wind:this.state.weather.wind.speed}))}}]),t}(a.Component),E=function(e){function t(){return Object(c.a)(this,t),Object(o.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(s.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App overlay\"},r.a.createElement(w,null))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(r.a.createElement(E,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n(16)}},[[8,2,1]]]);","extractedComments":[]}