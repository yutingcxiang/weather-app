{"ast":null,"code":"import _classCallCheck from \"/Users/yutingcxiang/weather-app/weather-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yutingcxiang/weather-app/weather-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yutingcxiang/weather-app/weather-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yutingcxiang/weather-app/weather-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yutingcxiang/weather-app/weather-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yutingcxiang/weather-app/weather-app/client/src/containers/WeatherContainer.js\";\nimport React, { Component } from 'react';\nimport Weather from '../components/Weather.js';\nimport Today from '../components/Today.js';\nimport Error from '../components/Error.js';\nimport LocationForm from '../components/LocationForm.js';\n\nvar WeatherContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherContainer, _Component);\n\n  function WeatherContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WeatherContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WeatherContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      weather: null,\n      city: '',\n      error: false,\n      query: ''\n    };\n\n    _this.getWeather = function (input) {\n      return fetch('/weather', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: input\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (res) {\n        //If invalid city, an empty object is returned\n        if (Object.keys(res).length !== 0) {\n          // Successful query handling\n          _this.setState({\n            weather: res,\n            city: res[\"name\"],\n            error: false,\n            query: ''\n          });\n        } else {\n          // Error query handling\n          _this.setState({\n            weather: null,\n            city: '',\n            error: true,\n            query: ''\n          });\n        }\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        query: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.getWeather(_this.state.query);\n\n      _this.setState({\n        query: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(WeatherContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Fetch updated weather every 15 minutes\n      this.interval = setInterval(function () {\n        return _this2.getWeather(_this2.state.weather);\n      }, 900000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Today, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(LocationForm, {\n        handleSubmit: this.handleSubmit,\n        handleChange: this.handleChange,\n        query: this.state.query,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), this.state.error && React.createElement(Error, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), this.state.weather && React.createElement(Weather, {\n        city: this.state.weather[\"name\"],\n        temperature: this.state.weather[\"main\"][\"temp\"],\n        description: this.state.weather[\"weather\"][0][\"description\"],\n        humidity: this.state.weather[\"main\"][\"humidity\"],\n        low: this.state.weather[\"main\"][\"temp_min\"],\n        high: this.state.weather[\"main\"][\"temp_max\"],\n        wind: this.state.weather[\"wind\"][\"speed\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return WeatherContainer;\n}(Component);\n\nexport default WeatherContainer;","map":{"version":3,"sources":["/Users/yutingcxiang/weather-app/weather-app/client/src/containers/WeatherContainer.js"],"names":["React","Component","Weather","Today","Error","LocationForm","WeatherContainer","state","weather","city","error","query","getWeather","input","fetch","method","headers","body","JSON","stringify","then","response","json","res","Object","keys","length","setState","handleChange","event","target","value","handleSubmit","preventDefault","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Weather from '../components/Weather.js';\nimport Today from '../components/Today.js';\nimport Error from '../components/Error.js';\nimport LocationForm from '../components/LocationForm.js';\n\nclass WeatherContainer extends Component {\n  state = {\n    weather: null,\n    city: '',\n    error: false,\n    query: '',\n  }\n\n  componentDidMount() {\n    // Fetch updated weather every 15 minutes\n    this.interval = setInterval(() =>\n      this.getWeather(this.state.weather), 900000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getWeather = (input) => {\n    return fetch('/weather', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ input }),\n    })\n    .then(response => response.json())\n    .then(res => {\n      //If invalid city, an empty object is returned\n      if (Object.keys(res).length !== 0) {\n        // Successful query handling\n        this.setState({\n          weather: res,\n          city: res[\"name\"],\n          error: false,\n          query: '',\n       })} else {\n         // Error query handling\n         this.setState({\n           weather: null,\n           city: '',\n           error: true,\n           query: '',\n         })\n       }\n     })\n  };\n\n  handleChange = event => {\n    this.setState({\n      query: event.target.value\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.getWeather(this.state.query)\n    this.setState({\n      query: '',\n    })\n  };\n\n  render() {\n    return(\n      <div className=\"centered\">\n        <Today /><br/>\n        <LocationForm handleSubmit={this.handleSubmit} handleChange={this.handleChange} query={this.state.query}/>\n        {this.state.error && <Error />}<br/>\n        {this.state.weather && <Weather\n          city={this.state.weather[\"name\"]}\n          temperature={this.state.weather[\"main\"][\"temp\"]}\n          description={this.state.weather[\"weather\"][0][\"description\"]}\n          humidity={this.state.weather[\"main\"][\"humidity\"]}\n          low={this.state.weather[\"main\"][\"temp_min\"]}\n          high={this.state.weather[\"main\"][\"temp_max\"]}\n          wind={this.state.weather[\"wind\"][\"speed\"]} />}\n      </div>\n    )\n  }\n}\n\nexport default WeatherContainer;\n"]},"metadata":{},"sourceType":"module"}